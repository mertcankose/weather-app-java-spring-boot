plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.mertcan'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // JWT bağımlılıkları
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    runtimeOnly 'org.postgresql:postgresql'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Memory optimizasyonu için bootJar konfigürasyonu
bootJar {
    layered()
    excludeDevtools = true

    // Production'da gereksiz dosyaları hariç tut
    excludes = [
            '**/application-dev.yml',
            '**/application-test.yml',
            '**/*.log'
    ]
}

// JVM heap size ayarları
bootRun {
    jvmArgs = [
            "-Xmx512m",
            "-XX:MaxMetaspaceSize=256m"
    ]
}

// Test içi memory ayarları
tasks.named('test') {
    useJUnitPlatform()
    jvmArgs = [
            "-Xmx256m",
            "-XX:MaxMetaspaceSize=128m"
    ]
}

// Production build optimizasyonu
tasks.register('buildForProduction') {
    group = 'build'
    description = 'Builds the application optimized for production deployment'

    dependsOn clean
    dependsOn bootJar

    tasks.findByName('bootJar').mustRunAfter('clean')
}